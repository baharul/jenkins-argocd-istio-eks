apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: kafka
spec:
  ports:
    - name: kafka-port
      port: 9092
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: kafka
data:
  server.properties: |-
    broker.id=0
    listeners=PLAINTEXT://kafka:9092
    log.dirs=/kafka/logs
    zookeeper.connect=zoo1:2181
---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: kafka
#   namespace: kafka
# spec:
#   serviceName: kafka
#   replicas: 3
#   selector:
#     matchLabels:
#       app: kafka
#   template:
#     metadata:
#       labels:
#         app: kafka
#     spec:
#       tolerations:
#         - effect: NoSchedule
#           key: kafka
#           operator: Equal
#           value: "true"
#       affinity:
#         podAntiAffinity:
#           requiredDuringSchedulingIgnoredDuringExecution:
#           - labelSelector:
#               matchExpressions:
#               - key: app
#                 operator: In
#                 values:
#                 - "kafka1"
#             topologyKey: kubernetes.io/hostname
#         nodeAffinity:
#           preferredDuringSchedulingIgnoredDuringExecution:
#           - preference:
#               matchExpressions:
#               - key: purpose
#                 operator: In
#                 values:
#                 - kafka
#             weight: 1    
#       containers:
#       - name: kafka
#         image: wurstmeister/kafka:2.13-2.8.1
#         env:
#           - name: KAFKA_ADVERTISED_LISTENERS
#             value: PLAINTEXT://kafka:9092
#           - name: KAFKA_ZOOKEEPER_CONNECT
#             value: zoo1:2181
#           - name: KAFKA_LISTENERS
#             value: PLAINTEXT://kafka:9092
#         ports:
#         - containerPort: 9092
#         volumeMounts:
#         - name: kafka-data
#           mountPath: /kafka
#         - name: kafka-config
#           mountPath: /opt/kafka/config
#       volumes:
#       - name: kafka-data
#         persistentVolumeClaim:
#           claimName: kafka-data
#       - name: kafka-config
#         configMap:
#           name: kafka-config
#   volumeClaimTemplates:
#   - metadata:
#       name: kafka-data
#     spec:
#       accessModes: ["ReadWriteOnce"]
#       resources:
#         requests:
#           storage: 1Gi
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: kafka-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kafka
  template:
    metadata:
      labels:
        name: kafka
        app: kafka
    spec:
      tolerations:
        - effect: NoSchedule
          key: kafka
          operator: Equal
          value: "true"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "kafka"
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: purpose
                operator: In
                values:
                - kafka
            weight: 1  
      containers:
      - name: kafka
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: [LOADBALANCER_DNS_GOES_HERE]
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1:2181,zoo2:2181,zoo3:2181
        - name: KAFKA_CREATE_TOPICS
          value: mytopic:2:1